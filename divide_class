#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <windows.h>
#include <time.h>

struct user
{
	int num[10]; //뽑은 숫자
	char name[30]; //32정도?
	int class[4]; //계급
};

struct card
{
	char Names[30]; //이름 
	int Cards[13]; //번호
};

char* ALL_card[80] = { 0, 0, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12 };

void Decide_Divide_Class() {
	char input[255] = { 0 };

Dicide:
	printf("\n\n\n\t\t\t\t\t\t\t\t\t계급을 나누시겠습니까? (\"나눈다\"라고 입력하세요) :  ");
	gets_s(input, 255);

	if (strcmp(input, "나눈다") == 0) {
		printf("\n\t\t\t\t\t\t\t\t\t\t계급을 나누겠습니다.\n");
	}
	else {
		printf("\t\t\t\t\t\t\t\t\t\t다시 입력하세요.\n");
		goto Dicide;
	}

}



void Divide_Class(struct user* user1, struct user* user2, struct user* user3, struct user* user4) {

divide:
	srand(time(NULL));
    int	num[4] = { 0 };

	int a = rand() % 80;
	int b = rand() % 80;
	int c = rand() % 80;
	int d = rand() % 80;
	int max = num[0], min = num[0];
	int second = 0, third = 0;
	
	num[0] = *(ALL_card + a);
	num[1] = *(ALL_card + b);
	num[2] = *(ALL_card + c);
	num[3] = *(ALL_card + d);
	
	
	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s이(가) 뽑은 수 : %d\n", user1->name, num[0]);
	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s이(가) 뽑은 수 : %d\n", user2->name, num[1]);
	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s이(가) 뽑은 수 : %d\n", user3->name, num[2]);
	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s이(가) 뽑은 수 : %d\n", user4->name, num[3]);
	
	if ((num[0] == num[1]) || (num[0] == num[2]) || (num[0] == num[3]) || (num[1] == num[2]) || (num[1] == num[3]) || (num[2] == num[3]))
	{
		printf("\t\t\t\t\t\t\t\t\t\t\t같은 숫자가 있어서 다시 나누겠습니다.\n");
		Sleep(1000);
		goto divide;
	}

	for (int i = 0; i < 4; i++) {
		if (max < num[i]) {
			max = num[i];
		}
	}
	for (int i = 0; i < 4; i++) {
		if (min > num[i]) {
			min = num[i];
		}
	}

	printf("%d, %d", max, min); //min?

	if ((((max != num[0]) && (min != num[0])) && ((max != num[1]) && (min != num[1]))))
	{
		if (num[0] > num[1])
		{
			second = num[0];
			third = num[1];
		}
		else if (num[0] < num[1])
		{
			second = num[1];
			third = num[0];
		}
	}
	else if ((((max != num[0]) && (min != num[0])) && ((max != num[2]) && (min != num[2]))))
	{
		if (num[0] > num[2])
		{
			second = num[0];
			third = num[2];
		}
		else if (num[0] < num[2])
		{
			second = num[2];
			third = num[0];
		}
	}
	else if ((((max != num[0]) && (min != num[0])) && ((max != num[3]) && (min != num[3]))))
	{
		if (num[0] > num[3])
		{
			second = num[0];
			third = num[3];
		}
		else if (num[0] < num[3])
		{
			second = num[3];
			third = num[0];
		}
	}
	else if ((((max != num[1]) && (min != num[1])) && ((max != num[2]) && (min != num[2]))))
	{
		if (num[1] > num[2])
		{
			second = num[1];
			third = num[2];
		}
		else if (num[1] < num[2])
		{
			second = num[2];
			third = num[1];
		}
	}
	else if ((((max != num[1]) && (min != num[1])) && ((max != num[3]) && (min != num[3]))))
	{
		if (num[1] > num[3])
		{
			second = num[1];
			third = num[3];
		}
		else if (num[1] < num[3])
		{
			second = num[3];
			third = num[1];
		}
	}
	else if ((((max != num[2]) && (min != num[2])) && ((max != num[3]) && (min != num[3]))))
	{
		if (num[2] > num[3])
		{
			second = num[2];
			third = num[3];
		}
		else if (num[2] < num[3])
		{
			second = num[3];
			third = num[2];
		}
	}

	printf("%d, %d, %d, %d", max, second, third, min);
	
	for (int i = 0; i < 4; i++)
	{
		if (strcmp(max, num[i]) == 0)
		{
			if (strcmp(max, num[0]) == 0)
			{
				strcpy(user1->class, "왕");
			}
			else if (strcmp(max, num[1]) == 0)
			{
				strcpy(user2->class, "왕");
			}
			else if (strcmp(max, num[2]) == 0)
			{
				strcpy(user3->class, "왕");
			}
			else if (strcmp(max, num[3]) == 0)
			{
				strcpy(user4->class, "왕");
			}
		}

		if (strcmp(second, num[i]) == 0)
		{
			if (strcmp(second, num[0]) == 0)
			{
				strcpy(user1->class, "귀족");
			}
			else if (strcmp(second, num[1]) == 0)
			{
				strcpy(user2->class, "귀족");
			}
			else if (strcmp(second, num[2]) == 0)
			{
				strcpy(user3->class, "귀족");
			}
			else if (strcmp(second, num[3]) == 0)
			{
				strcpy(user4->class, "귀족");
			}
		}

		if (strcmp(third, num[i]) == 0)
		{
			if (strcmp(third, num[0]) == 0)
			{
				strcpy(user1->class, "평민");
			}
			else if (strcmp(third, num[1]) == 0)
			{
				strcpy(user2->class, "평민");
			}
			else if (strcmp(third, num[2]) == 0)
			{
				strcpy(user3->class, "평민");
			}
			else if (strcmp(third, num[3]) == 0)
			{
				strcpy(user4->class, "평민");
			}
		}

		if (strcmp(min, num[i]) == 0)
		{
			if (strcmp(min, num[0]) == 0)
			{
				strcpy(user1->class, "노예");
			}
			else if (strcmp(min, num[1]) == 0)
			{
				strcpy(user2->class, "노예");
			}
			else if (strcmp(min, num[2]) == 0)
			{
				strcpy(user3->class, "노예");
			}
			else if (strcmp(min, num[3]) == 0)
			{
				strcpy(user4->class, "노예");
			}
		}
	}
	
	//1,2,3,4등 구별은 했는데 계급 출력이 안됨


	printf("\n\t\t\t\t\t\t\t\t\t\t\t계급은 다음과 같이 정해졌습니다.\n");
	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s의 계급 : %s\n", user1->name, user1->class);

	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s의 계급 : %s\n", user2->name, user2->class);

	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s의 계급 : %s\n", user3->name, user3->class);

	printf("\n\t\t\t\t\t\t\t\t\t\t\t%s의 계급 : %s\n", user4->name, user4->class);

}
